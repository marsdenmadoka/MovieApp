buildscript {
    ext {
       /// kotlin_version = '1.6.10'//'1.5.31'
        // compose_version = '1.1.0-beta01'
        //compose_version = '1.1.1'
        compose_version = '1.5.5'
        nav_version = "2.5.2"
        hiltVersion = "2.38.1"
        hiltCompiler = "1.0.0"
        retrofitVersion = "2.9.0"
        okhttpVersion = "4.9.1"

        workVersion = "2.7.1"
        mockito = "3.10.0"
        pagingVersion = "3.1.1"
    }
// Top-level build file where you can add configuration options common to all sub-projects/modules.
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20"'
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.50"
//        classpath libs.kotlin.gradle.plugin
//        classpath libs.hilt.android.gradle.plugin
        classpath"com.squareup.sqldelight:gradle-plugin:1.5.5"
       // ksp("com.google.devtools.ksp:symbol-processing-api:1.7.20-1.0.6")
       // ksp("com.google.devtools.ksp:symbol-processor:1.5.30-1.0.0")
    }
}

plugins {
//    id 'com.android.application' version '8.2.1' apply false
//    id 'com.android.library' version '8.2.1' apply false
//

    id("com.android.application") version "8.2.1" apply false
    id ("com.android.library") version "8.2.1" apply false
    id("org.jetbrains.kotlin.android") version "1.9.0" apply false
    //id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
    id ("com.google.dagger.hilt.android") version "2.50" apply false
    id('com.google.devtools.ksp') version '1.9.0-1.0.13' apply false

    id ("org.jetbrains.kotlin.plugin.serialization") version "1.9.0"

//    alias(libs.plugins.androidApplication).apply(false)
//    alias(libs.plugins.androidLibrary).apply(false)
//    alias(libs.plugins.kotlinAndroid).apply(false)
    alias(libs.plugins.kotlinMultiplatform).apply(false)

//    kotlin("multiplatform").apply(false)
//    id("com.android.application").apply(false)
//    id("com.android.library").apply(false)
//    id("org.jetbrains.compose").apply(false)
}
//
tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

